version: "2"

services:
  server-dev:
    build:
      context: ./src
      dockerfile: ./Dockerfile
      target: development
    image: app-server-image-dev
    container_name: app-server-container-dev
    profiles:
      - dev
    ports:
      - 8001:8001
    # environment:
    #   - PORT=${PORT}
    env_file:
      - ./.env
    depends_on:
      - postgres-db
    links:
      -  postgres-db
    volumes:
      - ./src/app:/app
      - ./src/logs:/var/logs
      - ./static:/static

  worker:
    build:
      context: ./src
      dockerfile: ./DockerfileWorker
      target: development
    image: app-worker-image-dev
    container_name: app-worker-container-dev
    env_file:
      - ./.env
    depends_on:
      - postgres-db
    links:
      - postgres-db
    volumes:
      - ./src/app:/app
      - ./src/logs:/var/logs
      - ./static:/static
    # entrypoint: ["/app/entrypoint-worker.sh"]

  postgres-db:
    container_name:  postgres-db
    image: postgres:12.1-alpine
    profiles:
      - prod
      - dev
    restart: always
    ports:
      - "5455:5432"
    env_file:
      - ./.env

  minio:
    image: minio/minio
    container_name: minio
    profiles:
      - dev
    ports:
      - 9002:9002
      - 9003:9003
    volumes:
      - ./data/minio:/data
    environment:
      MINIO_ROOT_USER: master123123
      MINIO_ROOT_PASSWORD: master123123
    command: server --console-address ":9001" /data

  redis-internal:
    image: 'redis:6.2-alpine'
    ports:
      - '6379:6379'
    container_name: redis-internal

    
volumes:
   postgres-db:

